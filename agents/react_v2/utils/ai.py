from openai import OpenAI
from dotenv import load_dotenv
import dspy

from typing import Optional, Type, TypeVar, Generic, Any, get_origin, get_args
from pydantic import BaseModel, create_model, Field

import os
load_dotenv()

lm = dspy.LM("gemini/gemini-2.5-flash", api_key=os.getenv("GOOGLE_API_KEY"), temperature=0, max_tokens=1000000)
dspy.configure(lm=lm)
    
def ai(user_prompt: str, system_prompt: Optional[str] = None):
    class QA(dspy.Signature):
        __doc__ = system_prompt
        
        user_prompt: str = dspy.InputField(desc="The user's request.")
        response: str = dspy.OutputField(desc="The text response generated by the language model.")
        
    predict = dspy.Predict(QA)
    return predict(user_prompt=user_prompt).response
    